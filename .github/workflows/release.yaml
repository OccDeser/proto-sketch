name: Build and Release

on:
  push:
    tags:
      - "v*" 

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install build

      - name: Extract version from tag
        id: version
        run: |
          # Remove 'v' prefix from tag name
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Build package
        run: |
          python -m build
          mkdir -p dist/artifacts
          cp dist/*.whl dist/artifacts/proto_sketch-${{ steps.version.outputs.version }}-py3-none-any.whl
          cp dist/*.tar.gz dist/artifacts/proto_sketch-${{ steps.version.outputs.version }}.tar.gz

      - name: Generate changelog
        id: changelog
        run: |
          # 简单的变更日志生成器
          LATEST_TAG=$(git describe --tags --abbrev=0)
          CHANGES=$(git log --pretty=format:"- %s" ${LATEST_TAG}..HEAD)
          echo "changes<<EOF" >> $GITHUB_OUTPUT
          echo "## Changes since ${LATEST_TAG}" >> $GITHUB_OUTPUT
          echo "${CHANGES}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changes }}
          files: |
            dist/artifacts/*
          draft: false
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
